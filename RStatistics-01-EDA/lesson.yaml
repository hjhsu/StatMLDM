- Class: meta
  Course: StatMLDM
  Lesson: RStatistics-01-EDA
  Author: Wush Wu, Johnson Hsieh
  Type: Standard
  Organization: Taiwan R User Group
  Version: 2.3.1.2
- Class: text
  Output: |
    探索性資料分析 (Exploratory Data Analysis, EDA) 是資料分析的第一步，
    包含檢查數據的正確性、掌握資料脈絡以規畫進階的分析策略等重要步驟。
    R 提供了許多執行EDA的工具，主要分為兩部分 (1). 敘述統計；(2). 統計圖表。
- Class: text
  Output: |
    關於 (1). 敘述統計 (Descriptive-Statistics)，
    可以分為 數值型變數 與 類別型變數 兩部分。本教材將針對R 對數值型變數的敘述性統計進行說明。
- Class: text
  Output: |
    對於描述數值型變數的資料中心點，我們可以使用：
    `mean`計算向量的平均數、`median`計算向量的中位數、`table + sort`尋找眾數。
- Class: cmd_question
  Output: 請同學輸入`mean(x1)`計算 x1 的平均數
  CorrectAnswer: mean(x1)
  AnswerTests: omnitest('mean(x1)')
  Hint: mean(x1)
- Class: cmd_question
  Output: 請同學輸入`median(x1)`計算 x1 的中位數
  CorrectAnswer: median(x1)
  AnswerTests: omnitest('median(x1)')
  Hint: median(x1)
- Class: cmd_question
  Output: |
    目前R 沒有內建函數可以計算眾數。最簡單的方法是利用`table + sort`。
    請同學輸入`table(x1)`來看看 x1 各種值所出現個數。
  CorrectAnswer: table(x1)
  AnswerTests: omnitest('table(x1)')
  Hint: table(x1)
- Class: text
  Output: |
    從螢幕上的輸出，我們可以看到x1中包含：
    3個1、1個2、1個3、...、1個10。
    第一列代表向量元素的名稱，對應到 x1 中的值。
    第二列代表出現的次數。
- Class: mult_question
  Output: 根據table(x1)的輸出，x1 的眾數為？
  AnswerChoices: 1;2;3;4;5;6;7;8;9;10
  CorrectAnswer: '1'
  AnswerTests: omnitest(correctVal = "1")
- Class: text
  Output: |
    如果要取得眾數的值，我們可以使用：`names(sort(-table(x1)))[1]`
    但是這樣會讓結果變成字串型態。在 Stack Overflow 這個網站中，有許多
    網友討論了如何更方便地計算眾數。有興趣的同學可以參考：
    <http://stackoverflow.com/q/2547402/1182304>
- Class: text
  Output: |
    另外也有一個套件：`modeest` 可以幫助我們計算眾數。有興趣的同學也可以
    自行摸索。
- Class: script
  Output: |
    請同學計算分別計算 x1, x2, x3 與 x4 的平均數、中位數與眾數。
  Script: rstatistics-02.R
  AnswerTests: rstatistics_02()
- Class: cmd_question
  Output: |
    為了方便比較，我們把同學計算出來的結果整理到變數 `answer_02` 之中。
    請同學看看該變數
  CorrectAnswer: answer_02
  AnswerTests: omnitest('answer_02')
  Hint: answer_02
- Class: mult_question
  Output: |
    請問平均數(mean)、中位數(median)和眾數(mode)，哪一個會受到
    極端觀測值的影響？（比較x1與x2的結果）或是全部都不會受到影
    響(none)
  AnswerChoices: mean;median;mode;none
  CorrectAnswer: mean
  AnswerTests: omnitest(correctVal = "mean")
- Class: cmd_question
  Output: |
    由於平均數容易受到極端值所影響，實務上可以使用修剪平均 (trimmed mean)，
    譬如跳水比賽，有五個評審，最終評分會先刪除最高與最低的分數，再從三個實得分中取得平均。
    在R中可以使用參數trim來指定要刪減的資料比率。舉例來說，trim = 0.2就會刪除前後20%的資料
    請同學輸入以下程式碼練習修剪平均 `mean(x2, trim=0.2)`
  CorrectAnswer: mean(x2, trim=0.2)
  AnswerTests: omnitest('mean(x2, trim=0.2)')
  Hint: mean(x2, trim=0.2)
- Class: mult_question
  Output: |
    請問資料變成原本的100倍後，平均數(mean)、中位數(median)和眾數(mode)，
    哪一個的值不會變成原來的100倍？（比較 x1 與 x3 的結果）或是全部都會變成原
    本的100倍(all)
  AnswerChoices: mean;median;mode;all
  CorrectAnswer: all
  AnswerTests: omnitest(correctVal = "all")
- Class: mult_question
  Output: |
    請問資料變成原本的值加1後，平均數(mean)、中位數(median)和眾數(mode)，
    哪一個的值不會變成原來的加1？（比較 x1 與 x4 的結果）或是全部都會變成原
    本的值 +1(all)
  AnswerChoices: mean;median;mode;all
  CorrectAnswer: all
  AnswerTests: omnitest(correctVal = "all")
- Class: text
  Output: |
    並不是所有度量資料中心的指標，經過線性轉換後都能夠保有相同結果。
    譬如冪平均 (power mean) 即是反例。我們熟知的調和平均數、幾何平均數就是冪平均的特例。
    有興趣的同學請參考：<https://en.wikipedia.org/wiki/Generalized_mean>
- Class: cmd_question
  Output: |
    請同學利用`prod` (連乘) 與 `^` (開根號) 兩個數學算子計算 x1 的幾何平均數。
  CorrectAnswer: prod(x1)^(1/length(x1))
  AnswerTests: val_is(prod(x1)^(1/length(x1)))
  Hint: prod(x1)^(1/length(x1))
- Class: text
  Output: |
    計算幾何平均數還有一個小技巧：`exp(mean(log(x1)))`。因為 log 與 exp 互為反函數，
    所以我們可以聯想到廣義平均：F_inv(mean(F(x1)))，其中 F_inv 是 F 的反函數。
- Class: text
  Output: |
    接下來，我們介紹描述數值型變數分散程度的函數。
- Class: cmd_question
  Output: |
    `max(x1)`可以計算 x1 的最大值，請同學試試看
  CorrectAnswer: max(x1)
  AnswerTests: omnitest('max(x1)')
  Hint: max(x1)
- Class: cmd_question
  Output: |
    `min(x1)`可以計算 x1 的最小值，請同學試試看
  CorrectAnswer: min(x1)
  AnswerTests: omnitest('min(x1)')
  Hint: min(x1)
- Class: cmd_question
  Output: |
    `range(x1)`可以計算 x1 的最大值和最小值，請同學試試看
  CorrectAnswer: range(x1)
  AnswerTests: omnitest('range(x1)')
  Hint: range(x1)
- Class: cmd_question
  Output: |
    `diff`則會計算一個數值向量，相鄰元素的差距 (後減前)。
    搭配`range`即可計算 x1 的全距。請同學試試看。
  CorrectAnswer: diff(range(x1))
  AnswerTests: omnitest(correctVal = diff(range(x1)))
  Hint: diff(range(x1))
- Class: script
  Output: 請同學計算x1, x2, x3與x4的最大值、最小值與全距
  Script: rstatistics-03-01.R
  AnswerTests: rstatistics_03_01()
- Class: cmd_question
  Output: |
    我們把同學計算的結果整理到變數`answer_03_01`，請同學看看它
  CorrectAnswer: answer_03_01
  AnswerTests: omnitest('answer_03_01')
  Hint: answer_03_01
- Class: mult_question
  Output: |
    請問同學，全距是不是會受到極端觀測值的影響？（比較 x1 與 x2 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料放大100倍後，全距的值不會變成原來的100倍？（比較 x1 與 x3 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料全部加1後，全距的值會不會改變？ （比較 x1 與 x4 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: cmd_question
  Output: |
    `abs`可以計算向量的絕對值。`mean`可以計算平均值。
    所以`mean(abs(x1 - mean(x1)))`就可以計算 x1 的平均差(MD)。
    請同學試試看
  CorrectAnswer: mean(abs(x1 - mean(x1)))
  AnswerTests: omnitest('mean(abs(x1 - mean(x1)))')
  Hint: mean(abs(x1 - mean(x1)))
- Class: script
  Output: |
    接著，請同學計算 x1、x2 和 x3 的平均差
  Script: rstatistics-03-02.R
  AnswerTests: rstatistics_03_02()
- Class: cmd_question
  Output: |
    我們把同學計算的結果整理到變數`answer_03_02`，請同學看看它
  CorrectAnswer: answer_03_02
  AnswerTests: omnitest('answer_03_02')
  Hint: answer_03_02
- Class: mult_question
  Output: |
    請問同學，平均差是不是會受到極端觀測值的影響？（比較 x1 與 x2 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料放大100倍後，平均差的值不會變成原來的100倍？ （比較 x1 與 x3 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料全部加1後，平均差的值會不會改變？ （比較x1與x4的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: cmd_question
  Output: |
    同樣的要領，我們可以計算 MAD (Median Absolute Deviation)。
    請同學組合`median`與`abs`找出 x1 的 MAD。
  CorrectAnswer: median(abs(x1 - median(x1)))
  AnswerTests: omnitest(correctVal = median(abs(x1 - median(x1))))
  Hint: median(abs(x1 - median(x1)))
- Class: cmd_question
  Output: |
    R 也有提供內建函數計算MAD。請同學輸入`?mad`打開該函數的說明文件
  CorrectAnswer: ?mad
  AnswerTests: omnitest('?mad')
  Hint: ?mad
- Class: mult_question
  Output: |
    請問下列哪一個**不是**`mad`的參數？
  AnswerChoices: x;center;constant;na.rm;method
  CorrectAnswer: method
  AnswerTests: omnitest(correctVal = "method")
- Class: cmd_question
  Output: |
    R 的`mad`函數提供了一些彈性讓使用者設定。再說明之前，我們請
    同學先試試看：`mad(x1)`
  CorrectAnswer: mad(x1)
  AnswerTests: omnitest('mad(x1)')
  Hint: mad(x1)
- Class: text
  Output: |
    同學有沒有注意到，`mad(x1)`和我們先前用`median`與`abs`組合的
    計算結果不同。這是因為R 的`mad`預設會使用一個常數(即`mad`的
    參數`constant`)來修正輸出結果。
- Class: text
  Output: |
    根據 Details 的說明，如果利用神奇的 1.4826 乘上原本定義的 MAD 做修正。
    在某些條件下，修正後的 MAD 可以估計母體標準差。
- Class: cmd_question
  Output: |
    請同學輸入：`mad(x1, constant = 1)`來看看結果是不是2（我們之前
    自行計算的結果）
  CorrectAnswer: mad(x1, constant = 1)
  AnswerTests: omnitest('mad(x1, constant = 1)')
  Hint: mad(x1, constant = 1)
- Class: script
  Output: |
    接著請同學計算 x1, x2, x3, x4 的 MAD
  Script: rstatistics-03-03.R
  AnswerTests: rstatistics_03_03()
- Class: cmd_question
  Output: |
    我們把同學計算的結果整理到變數`answer_03_03`，請同學看看它
  CorrectAnswer: answer_03_03
  AnswerTests: omnitest('answer_03_03')
  Hint: answer_03_03
- Class: mult_question
  Output: |
    請問同學，MAD 是不是會受到極端觀測值的影響？（比較 x1 與 x2 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: mult_question
  Output: 請問同學，在資料放大100倍後，MAD 的值不會變成原來的100倍？ （比較 x1 與 x3 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料全部加1後，MAD 的值會不會改變？ （比較 x1 與 x4 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: text
  Output: 接著我們介紹如何計算百分位數
- Class: cmd_question
  Output: |
    請同學先輸入`?quantile`看看這個函數的說明文件
  CorrectAnswer: ?quantile
  AnswerTests: omnitest('?quantile')
  Hint: ?quantile
- Class: text
  Output: |
    `quantile`函數的參數`probs`即代表我們要選取的百分位。舉例來說，
    25百分位數，`probs`參數就要設定為 0.25。75百分位數，`probs`就
    設定為 0.75
- Class: mult_question
  Output: |
    請問同學，`probs`的預設參數為何？
  AnswerChoices: seq(0, 1, 0.25);c(0.25, 0.5, 0.75);FALSE;TRUE
  CorrectAnswer: seq(0, 1, 0.25)
  AnswerTests: omnitest(correctVal = "seq(0, 1, 0.25)")
  Hint: 函數的參數會寫在 Usage 段落
- Class: cmd_question
  Output: |
    這裡複習一下`seq`函數。請問同學，`seq(0, 1, 0.25)`的長度會是多少？
  CorrectAnswer: 5
  AnswerTests: omnitest(correctVal = 5)
  Hint: 5
- Class: text
  Output: |
    由上述的說明，我們可以意識到，如果把一個向量放入`probs`參數，
    `quantile`函數就可以一次算出所有向量對應的百分位數
- Class: mult_question
  Output: |
    在說明文件中，Details 的部分也有交代R 實作的`quantile`算法細節。
    請問同學，如果要更換實作方式，要用哪一個參數做調整？
  AnswerChoices: x;probs;na.rm;names;type
  CorrectAnswer: type
  AnswerTests: omnitest(correctVal = "type")
  Hint: 請參考Arguments段落的說明
- Class: mult_question
  Output: |
    `type`參數一共有幾種設定呢？R 實作了多少種`quantile`的算法？
  AnswerChoices: 1;3;5;7;9
  CorrectAnswer: '9'
  AnswerTests: omnitest(correctVal = "9")
  Hint: 請同學參考 Arguments 中對於 type 的說明
- Class: cmd_question
  Output: 請同學嘗試算出 x1 的四分位差（請用預設的`type`）
  CorrectAnswer: diff(quantile(x1, probs = c(0.25, 0.75)))
  AnswerTests: test_value_no_name(IQR(x1))
  Hint: diff(quantile(x1, probs = c(0.25, 0.75)))
- Class: cmd_question
  Output: |
    R 也提供了內建函數來直接計算四分位差。請同學輸入：`?IQR`看看
    說明文件
  CorrectAnswer: ?IQR
  AnswerTests: omnitest('?IQR')
  Hint: ?IQR
- Class: script
  Output: |
    請同學計算 x1, x2, x3, x4 的四分位差
  Script: rstatistics-03-04.R
  AnswerTests: rstatistics_03_04()
- Class: cmd_question
  Output: |
    我們把同學計算的結果整理到變數`answer_03_04`，請同學看看它
  CorrectAnswer: answer_03_04
  AnswerTests: omnitest('answer_03_04')
  Hint: answer_03_04
- Class: mult_question
  Output: |
    請問同學，四分位差是不是會受到極端觀測值的影響？（比較 x1 與 x2 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: mult_question
  Output: 請問同學，在資料放大100倍後，四分位差的值不會變成原來的100倍？ （比較 x1 與 x3 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料全部加1後，四分位差的值會不會改變？ （比較 x1 與 x4 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: text
  Output: |
    接下來我們介紹R 內建計算變異數與標準差的函數。
- Class: cmd_question
  Output: |
    請同學先輸入：`?var`看看計算變異數的說明文件
  CorrectAnswer: ?var
  AnswerTests: omnitest('?var')
  Hint: ?var
- Class: mult_question
  Output: |
    請問`var`計算的是母體變異數，還是樣本變異數呢？
    請同學閱讀 Details 段落的第五段後，作答。
    A 代表母體變異數、B 代表樣本變異數
  AnswerChoices: A;B
  CorrectAnswer: B
  AnswerTests: omnitest(correctVal = "B")
- Class: cmd_question
  Output: |
    請同學直接輸入`var(x1)`計算 x1 的樣本變異數
  CorrectAnswer: var(x1)
  AnswerTests: omnitest('var(x1)')
  Hint: var(x1)
- Class: cmd_question
  Output: |
    請同學輸入`?sd`閱讀計算標準差的說明文件
  CorrectAnswer: ?sd
  AnswerTests: omnitest('?sd')
  Hint: ?sd
- Class: mult_question
  Output: |
    請問同學，`sd`計算的是母體標準差，還是樣本標準差？
    請同學閱讀 Details 段落後作答。
    A 代表母體標準差、B 代表樣本標準差
  AnswerChoices: A;B
  CorrectAnswer: B
  AnswerTests: omnitest(correctVal = "B")
- Class: cmd_question
  Output: |
    請同學輸入`sd(x1)`計算 x1 的樣本標準差
  CorrectAnswer: sd(x1)
  AnswerTests: omnitest('sd(x1)')
  Hint: sd(x1)
- Class: script
  Output: |
    請同學計算 x1, x2, x3, x4 的樣本變異數與樣本標準差
  Script: rstatistics-03-05.R
  AnswerTests: rstatistics_03_05()
- Class: cmd_question
  Output: |
    我們把同學計算的結果整理到變數`answer_03_05`，請同學看看它
  CorrectAnswer: answer_03_05
  AnswerTests: omnitest('answer_03_05')
  Hint: answer_03_05
- Class: mult_question
  Output: |
    請問同學，變異數是不是會受到極端觀測值的影響？（比較 x1 與 x2 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料放大100倍後，變異數的值不會變成原來的100倍？ （比較 x1 與 x3 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: text
  Output: |
    由於變異數帶有平方，所以當資料放大100倍之後，變異數應當要放大10000倍，
    也就是100的平方。
- Class: mult_question
  Output: 請問同學，在資料全部加1後，變異數的值會不會改變？ （比較 x1 與 x4 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: text
  Output: |
    值得一提的是，變異數 (或標準差) 在加法性轉換時會改變，但是平均差 (MAD) 不變。
- Class: script
  Output: 接著請同學利用`sd`與`mean`兩個函數計算 x1, x2, x3 與 x4 的變異係數
  Script: rstatistics-03-06.R
  AnswerTests: rstatistics_03_06()
- Class: cmd_question
  Output: |
    我們把同學計算的結果整理到變數`answer_03_06`，請同學看看它
  CorrectAnswer: answer_03_06
  AnswerTests: omnitest('answer_03_06')
  Hint: answer_03_06
- Class: mult_question
  Output: |
    請問同學，變異係數是不是會受到極端觀測值的影響？（比較 x1 與 x2 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: mult_question
  Output: 請問同學，在資料放大100倍後，變異係數的值不會變成原來的100倍？（比較 x1 與 x3 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: text
  Output: |
    事實上，變異係數維持不變
- Class: mult_question
  Output: 請問同學，在資料平移後，變異係數的值會不會改變（比較 x1 與 x4 的結果）？
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: script
  Output: 最後，我們請同學利用`IQR`與`median`計算 x1, x2, x3 與 x4 的 Quartile coefficient of dispersion
  Script: rstatistics-03-07.R
  AnswerTests: rstatistics_03_07()
- Class: cmd_question
  Output: |
    我們把同學計算的結果整理到變數`answer_03_07`，請同學看看它
  CorrectAnswer: answer_03_07
  AnswerTests: omnitest('answer_03_07')
  Hint: answer_03_07
- Class: mult_question
  Output: |
    請問同學，Quartile coefficient of dispersion 是不是會受到極端觀測值的影響？（比較 x1 與 x2 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: mult_question
  Output: 請問同學，在資料放大100倍後，Quartile coefficient of dispersion的值不會變成原來的100倍？ （比較 x1
    與 x3 的結果）
  AnswerChoices: Yes;No
  CorrectAnswer: 'No'
  AnswerTests: omnitest(correctVal = "No")
- Class: mult_question
  Output: 請問同學，在資料平移後，Quartile coefficient of dispersion的值會不會改變（比較 x1 與 x4 的結果）？
  AnswerChoices: Yes;No
  CorrectAnswer: 'Yes'
  AnswerTests: omnitest(correctVal = "Yes")
- Class: cmd_question
  Output: |-
    我們將各種分散指標的特性：不受極端值影響（robustness）、
    不受數據等比例放大的影響（ratio.invariant）、會隨著數據等
    比例放大（ratio）與不會被數據同加同減影響(shift.invariant)
    整理到變數`answer`。請同學看一看
  CorrectAnswer: answer
  AnswerTests: omnitest('answer')
  Hint: answer

